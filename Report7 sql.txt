create table ProductDetails
(
ProductId int,
Name varchar(20),
UnitPrice int);

insert into ProductDetails values(1,'Books',20)
insert into ProductDetails values(2,'Pens',14)
insert into ProductDetails values(3,'Pencils',11)
insert into ProductDetails values(1,'Clips',10)

select * from  ProductDetails

create table ProductSales
(
ProductId int,
QuantitySold int);

insert into ProductSales values
(1,10),
(3,23),
(4,21),
(2,12),
(1,13),
(3,12),
(4,13),
(1,11),
(2,12),(1,14);

select * from ProductSales

create view vwTotalSalesByProuct
with SchemaBInding
as
select Name,
Sum(Isnull((QuantitySold * UnitPrice),0)) as TotalSales,
Count_big(*) as TotalTransaction
from dbo.ProductSales
join dbo.ProductDetails
on dbo.ProductDetails.ProductId=dbo.ProductSales.ProductId
group by Name

select * from vwTotalSalesByProuct

create Unique Clustered Index UIX_vwTotalSalesByProuct_Name
on vwTotalSalesByProuct(Name)

create index IX_ProductDetails1
on ProductDetails (UnitPrice asc)

execute sp_helpindex ProductDetails

create clustered index IX_ProductDetails_Name_UnitPrice
on ProductDetails(Name desc,UnitPrice desc)

drop index ProductDetails.IX_ProductDetails_Name_UnitPrice

select * from ProductDetails

create nonclustered index IX_ProductDetails_Name
on ProductDetails(Name desc)

select * from  ProductDetails



CREATE TABLE ValueTable (id INT);  
BEGIN TRANSACTION;  
       INSERT INTO ValueTable VALUES(1);  
       INSERT INTO ValueTable VALUES(2);  
ROLLBACK;  

--Transction

DECLARE @TranName VARCHAR(20);  
SELECT @TranName = 'MyTransaction';  
  
BEGIN TRANSACTION @TranName;  
USE AdventureWorks2012;  
DELETE FROM AdventureWorks2012.HumanResources.JobCandidate  
    WHERE JobCandidateID = 13;  
  
COMMIT TRANSACTION @TranName;  
GO  


BEGIN TRANSACTION CandidateDelete  
    WITH MARK N'Deleting a Job Candidate';  
GO  
USE AdventureWorks2012;  
GO  
DELETE FROM AdventureWorks2012.HumanResources.JobCandidate  
    WHERE JobCandidateID = 13;  
GO  
COMMIT TRANSACTION CandidateDelete;  
GO  